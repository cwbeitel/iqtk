syntax = "proto3";
package inquiry.util.dev.job;

import "inquiry/util/common.proto";

message GenotypingParameters {
    string ref_fasta = 1;
    string reads = 2;
}

E2E validation

message RunMode {
  bool local = 1;
  bool cloud = 2;
  bool debug = 3;
  bool dry_run = 4;
}

message Job {
  RunMode run_mode = 1;
  Workflow workflow = 2; // git path
  params

}

job_name
staging_location
temp_location
project
output_dir


// This is already defined as GoogleCloudOptions within Beam.
message DataFlowOptions {
  int32 num_workers = 1;
  enum worker_machine_type = 2;
  enum runner = 3;
  bool save_main_session = 4;
  string staging_location = 5;
  string temp_location = 6;
  string project = 7;
  string job_name = 8;
}

message BatchOperationResources {
  int32 min_cores = 1;
  int32 min_ram = 2;
  int32 disk_size = 3;
  int32 boot_disk_size = 4;
  bool preemptible = 5;
  string image = 6;
}

BatchOperationMetadata {
  string operation_name = 1;
  bool done = 2;
}

message File {
  string path = 1;
  string type = 2;
}

message FileCollection {
  repeated File files = 1;
}

message Directory {
  string path = 1;
}

message GoogleBatchJobProvider {
  repeated File input_files = 1;
  Directory log_output_path = 2;
  int32 disk_size = 3;
  int32 min_ram = 4
  string command = 5;
  string project_id = 6;
  string runtime_image = 7;
  //string job_args = 8;
  string job_name = 9;
  string region = 10;
  bool dry_run = 11;
  Directory output_dir = 12;
  int32 cpu_cores = 13;
  DateTime timeout = 14;
}

message LocalBatchJobProvider {
  repeated File input_files = 1;
  Directory log_output_path = 2;
  string command = 3;
  string runtime_image = 4;
  //string job_args = 5;
  string job_name = 6;
  bool dry_run = 7;
  Directory output_dir = 8;
  int32 cpu_cores = 9;
}

message AWSBatchJobProvider {
}
